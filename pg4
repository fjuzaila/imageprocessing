import cv2
import numpy as np
import matplotlib.pyplot as plt

def enhance_image(image):
    # Convert to grayscale
    gray_image = cv2.cvtColor(image, cv2.COLOR_BGR2GRAY)
    
    # Apply histogram equalization
    enhanced_image = cv2.equalizeHist(gray_image)
    
    return enhanced_image

def segment_image(enhanced_image):
    # Apply a binary threshold to the enhanced image
    _, segmented_image = cv2.threshold(enhanced_image, 127, 255, cv2.THRESH_BINARY)
    
    return segmented_image

def main(image_path):
    # Read the image
    image = cv2.imread(image_path)
    
    # Enhance the image
    enhanced_image = enhance_image(image)
    
    # Segment the image
    segmented_image = segment_image(enhanced_image)
    
    # Display the results
    plt.figure(figsize=(12, 6))
    
    plt.subplot(1, 3, 1)
    plt.title('Original Image')NSS
    plt.imshow(cv2.cvtColor(image, cv2.COLOR_BGR2RGB))
    plt.axis('off')
    
    plt.subplot(1, 3, 2)
    plt.title('Enhanced Image')
    plt.imshow(enhanced_image, cmap='gray')
    plt.axis('off')
    
    plt.subplot(1, 3, 3)
    plt.title('Segmented Image')
    plt.imshow(segmented_image, cmap='gray')
    plt.axis('off')
    
    plt.tight_layout()
    plt.show()

# Example usage
if __name__ == "__main__":
    image_path = 'pic.jpg'  # Replace with your image path
    main(image_path)
